Digest                          # Namespace / Global
  
  fn                            # prototype clone
    
    [hash]                      # HMAC-Keyed Hash Functions
    [hash](...)                 #=> Encoder(result)
    [hash](data, hkey)
      
      md4(...)
      md5(...)
      sha1(...)
      sha224(...)
      sha256(...)
      sha384(...)
      sha512(...)
    
    [keyed]                     # Keyed Hash Functions
    [keyed](...)                #=> Encoder(result)
    [keyed](len, data, key, utf8=true)
      
      md6par(...)               {0 < len <= 512}
      md6seq(...)               {0 < len <= 512}
      skein256(...)             {0 < len <= 256}
      skein512(...)             {0 < len <= 512}
      skein1024(...)            {0 < len <= 1024}
    
    [mac]                       # MAC function definitions
    [mac](...)                  #=> Encoder(result)
    [mac](hash, data, hkey, block)
      
      hmac(...)
  
  
  Encoder
    constructor(array)          #=> Array,  0x0000-0xffff
    constructor(string)         #=> String, \u0000-\uffff
    constructor(Encoder)        #=> cloning
    
    # Multi-byte
    array()                     #=> Array,  0x0000-0xffff
    string()                    #=> String, \u0000-\uffff
    
    # Input Encodings
    split()                     #=> Array, 0x00-0xff, [0xHHhh] => [0xHH, 0xhh]
    trunc()                     #=> Array, 0x00-0xff, [0xHHhh] => [0xhh]
    utf8()                      #=> Array, 0x00-0xff, UTF-8 encoded
    
    # Output (RFC-4648) Encodings
    hex()                       #=> String, 0-9 a-f (lower)
    base16()                    #=> String, 0-9 A-F (upper)
    base32()                    #=> String, A-Z 2-7 (upper)
    base32hex()                 #=> String, 0-9 a-v (lower)
    base64()                    #=> String, A-Z a-z 0-9 + /
    base64url()                 #=> String, A-Z a-z 0-9 - _ (url/filename safe)

  Encoding.ready                # Encode input by type
  Encoding.ready(input)         #=> Array, 0x00-0xff
