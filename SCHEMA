Digest                          # Namespace / Global
  
  fn                            # prototype clone
    
    [hash]                      # Hash function definitions
    [hash](...)                 #=> Encoder(hash)
    [hash](data, utf8=true)
      
      md4(...)
      md5(...)
      sha1(...)
      sha224(...)
      sha256(...)
      sha384(...)
      sha512(...)
    
    [keyed]                     # Keyed hash function definitions
    [keyed](...)                #=> Encoder(hash)
    [keyed](data, key, utf8=true)
    
    [mac]                       # MAC function definitions
    [mac](...)                  #=> Encoder(hash)
    [mac](hash, data, key, utf8=true)
      
      hmac(...)
  
  
  configure(function, config)   # Configure a Hash for use with MACs
    
    config = {
      block : Number(...),      # function's block size in bytes
      curri : Number(...),      # index of `curry` to replace with data
      curry : Array<Object>     # unfinished arguments array
    }
  
  
  Encoder
    constructor(array)          #=> Array,  0x0000-0xffff
    constructor(string)         #=> String, \u0000-\uffff
    
    # Multi-byte
    array()                     #=> Array,  0x0000-0xffff
    string()                    #=> String, \u0000-\uffff
    
    # Single-byte
    single()                    #=> Array,  0x00-0xff, truncated
    multi()                     #=> Array,  0x00-0xff, [0xHHhh] => [0xHH, 0xhh]
    ansi()                      #=> String, \x00-\xff, truncated
    utf8()                      #=> String, \x00-\xff, UTF-8 encoded
    
    # RFC-4648 encoding
    hex()                       #=> String, 0-9 a-f (lower)
    base16()                    #=> String, 0-9 A-F (upper)
    base32()                    #=> String, A-Z 2-7 (upper)
    base32hex()                 #=> String, 0-9 a-v (lower)
    base64()                    #=> String, A-Z a-z 0-9 + /
    base64url()                 #=> String, A-Z a-z 0-9 - _ (url/filename safe)
